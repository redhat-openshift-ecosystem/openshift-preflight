name: Create Release Artifacts

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      registry:
        required: true
      user:
        required: true
      password:
        required: true
      token:
        required: true
        
jobs:
  release-assets-matrix:
    name: Release Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ linux ]
        architecture:
          - amd64
          - arm64
          - ppc64le
          - s390x
    steps:
    - name: Docker Login
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.registry }}
        username: ${{ secrets.user }}
        password: ${{ secrets.password }}

    - name: Extract executable
      uses: shrink/actions-docker-extract@v3
      id: extract
      with:
        image: ${{ secrets.registry }}/${{ inputs.name }}:${{ inputs.tag }}-${{ matrix.platform }}-${{ matrix.architecture }}
        path: /usr/local/bin/preflight

    - name: Rename the binary
      uses: canastro/copy-file-action@master
      with:
        source: ${{ steps.extract.outputs.destination }}/preflight
        target: ${{ steps.extract.outputs.destination }}/preflight-${{ matrix.platform }}-${{ matrix.architecture }}

    - name: Upload binaries to the release
      uses: AButler/upload-release-assets@v3.0
      id: upload-release-asset
      with:
        files: ${{ steps.extract.outputs.destination }}/preflight-${{ matrix.platform }}-${{ matrix.architecture }}
        repo-token: ${{ secrets.token }}
        release-tag: ${{ inputs.tag }}

  # an ugly workaround to build binaries for mac.  builds locally and pushes to the release.
  add-darwin-bins:
    name: Release binaries for MacOS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set Env Tags
        run: echo RELEASE_TAG=$(echo $GITHUB_REF | cut -d '/' -f 3) >> $GITHUB_ENV
  
      - name: Install system deps
        run: 'sudo apt update && sudo apt install -y libgpgme-dev libbtrfs-dev libdevmapper-dev'
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build Multi-arch-mac
        run: make build-multi-arch-mac

      - name: Upload binaries to the release
        uses: AButler/upload-release-assets@v3.0
        id: upload-release-asset
        with:
          files: preflight-darwin-*
          repo-token: ${{ secrets.token }}
          release-tag: ${{ inputs.tag }}
